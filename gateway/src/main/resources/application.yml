spring:
  application:
    name: gateway
  security:
    oauth2:
      resourceserver:
        jwt:
#          jwk-set-uri: http://localhost:8180/realms/demo/protocol/openid-connect/certs
          issuer-uri: http://localhost:8180/realms/demo
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8180/realms/demo
#        registration:
#          spring-with-test-scope:
#            provider: keycloak
#            client-id: spring-with-test-scope
##            client-secret: tLmZ6qe4LR40701ul7PHQnajJEwJLa8L
#            client-secret: RlSllCAQoPdT25PCOQwtEl7RhSMLRWMW
#            authorization-grant-type: authorization_code
#            scope: openid
        registration:
          keycloak:
            client-id: spring-with-test-scope
            client-secret: RlSllCAQoPdT25PCOQwtEl7RhSMLRWMW
            scope: openid
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "*"
              - "http://localhost:3000"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
#              - "COOKIE"
#            exposedHeaders:
#              - "*"
#            allowCredentials: true
#      default-filters:
#        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      routes:
        - id : rs_route
          uri: lb://recipients-service
          predicates:
            - Path=/recipients-service/**
          filters:
              - StripPrefix=1
        - id: trs_route
          uri: lb://task-resolver-service
          predicates:
            - Path=/task-resolver-service/**
          filters:
            - StripPrefix=1
        - id: nss_route
          uri: lb://notification-sender-service
          predicates:
            - Path=/notification-sender-service/**
          filters:
            - StripPrefix=1
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8070/eureka